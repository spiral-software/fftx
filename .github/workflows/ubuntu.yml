name: Ubuntu build

on: [push, pull_request]

jobs:
  build_gcc:
    name: Check sprial-package-fftx on Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout spiral-software
      uses: actions/checkout@v2
      with:
        repository: spiral-software/spiral-software
        ref: develop
        path: spiral
    - name: Checkout repo spiral-package-fftx
      uses: actions/checkout@v2
      with:
        ref: develop
        path: spiral/namespaces/packages/fftx
    - name: Checkout repo spiral-package-simt
      uses: actions/checkout@v2
      with:
        repository: spiral-software/spiral-package-simt
        ref: develop
        path: spiral/namespaces/packages/simt
    - name: Checkout repo spiral-package-mpi
      uses: actions/checkout@v2
      with:
        repository: spiral-software/spiral-package-mpi
        ref: develop
        path: spiral/namespaces/packages/mpi
    - name: install dependencies
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get -qqq update
        sudo apt-get install -y build-essential ca-certificates cmake pkg-config wget
        sudo apt-get install python3.8
        sudo curl -L -o /usr/local/bin/cmake-easyinstall https://git.io/JvLxY
        sudo chmod a+x /usr/local/bin/cmake-easyinstall
        export CEI_SUDO="sudo"
    - name: build SPIRAL
      env:
        SPIRAL_HOME: ${{ github.workspace }}/spiral
      run: |
        cd spiral
        mkdir build && cd build
        cmake -D_codegen=CPU .. 
        make -j 2 install

  build_fftx:
    name: Build FFTX on Linux
    runs-on: ubuntu-latest
    steps:
    - name: Checkout FFTX
      uses: actions/checkout@v2
      with:
        repository: spiral-software/fftx
        ref: develop
        path: fftx
    - name: build FFTX
      env:
        SPIRAL_HOME: ${{ github.workspace }}/spiral
        FFTX_HOME: ${{ github.workspace }}/fftx
      run: |
        cd ${{ github.workspace }}/fftx/examples/library
        "./build-lib-code.sh"
        cd ${{ github.workspace }}/fftx
        mkdir build && cd build
        # -DCMAKE_INSTALL_PREFIX=fftx 
        cmake -D_codegen=CPU ..
        make -j 2 install


    # - name: install dependencies
    #   run: |
    #     export DEBIAN_FRONTEND=noninteractive
    #     sudo apt-get -qqq update
    #     sudo apt-get install -y build-essential ca-certificates cmake pkg-config wget
    #     sudo apt-get install python3.8
    #     sudo curl -L -o /usr/local/bin/cmake-easyinstall https://git.io/JvLxY
    #     sudo chmod a+x /usr/local/bin/cmake-easyinstall
    #     export CEI_SUDO="sudo"
      # shell: bash
